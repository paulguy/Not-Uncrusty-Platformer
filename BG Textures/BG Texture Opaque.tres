[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://cv016vn41m8bi"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ujmmd"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jexh0"]
source = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_5i2wu"]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2bu8g"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec2 n_out2p0 = UV;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;


// FloatOp:5
	float n_in5p1 = 0.50000;
	float n_out5p0 = pow(n_out2p2, n_in5p1);


// VectorCompose:4
	vec2 n_out4p0 = vec2(n_out2p1, n_out5p0);


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, n_out4p0);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
graph_offset = Vector2(-50.5575, -111.884)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1380, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_ujmmd")
nodes/fragment/2/position = Vector2(0, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_jexh0")
nodes/fragment/3/position = Vector2(1100, 80)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorCompose_5i2wu")
nodes/fragment/4/position = Vector2(840, 80)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_2bu8g")
nodes/fragment/5/position = Vector2(540, 200)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 2, 1, 4, 0, 2, 2, 5, 0, 5, 0, 4, 1, 4, 0, 3, 0)
